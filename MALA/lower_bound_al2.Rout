
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> set.seed(1234)
> 
> library(latex2exp)
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(latex2exp)
> 
> ############## Function
> f = function(x_2, sd, mc.size, r1){
+   dum = 0
+   foo = rep(0, mc.size)
+   for(t1 in 1:mc.size)
+   {
+     x_1 = r1[t1] 
+     z <- rnorm(mc.size, x_2 - x_2*sd^2 - x_2*x_1^2*sd^2, sd)
+     foo = exp(dnorm(z, 0, sqrt(1/(2*(1 + x_1^2))), log = TRUE) - dnorm(x_2, 0, sqrt(1/(2*(1 + x_1^2))), log = TRUE) -
+       dnorm(z, x_2 - x_2*sd^2 - x_2*x_1^2*sd^2, sd, log = TRUE) + dnorm(x_2, z - z*sd^2 - z*x_1^2*sd^2, sd, log = TRUE))
+     dum <- dum + mean(pmin(foo, 1))
+   }
+   return(dum/(mc.size))
+ }
> 
> 
> ############ Output and Plot
> set.seed(1234)
> sequence = 1e2
> h = c(0.001, 1, 5) # proposal standard deviation
> 
> l2 = seq(-5, 5, length.out = sequence)# Grid
> 
> lb_list = list()
> 
> for(i in 1:length(h)){
+   lb_list[[i]] = rep(0, length = sequence)
+ }
> 
> mc.size <- 1e4
> 
> parallel::detectCores()
[1] 8
> n.cores <- 4
> doParallel::registerDoParallel(cores = n.cores)
> 
> lb_list = foreach(k = 1:length(h))%dopar%{
+   sd = h[k]
+   dumat = rep(0, length(l2))
+   for(i2 in 1:length(l2)){
+       print(c(k, i2))
+       x_2 = l2[i2]
+       r1 = rnorm(mc.size, 0, sqrt(1/(2*(1+x_2^2))))
+       dumat[i2] = f(x_2, sd, mc.size, r1)
+   }
+   dumat
+ }
[1] 1 1
[1] 2 1
[1] 3 1
[1] 3 2
[1] 2 2
[1] 1 2
[1] 2 3
[1] 3 3
[1] 1 3
[1] 3 4
[1] 2 4
[1] 1 4
[1] 3 5
[1] 2 5
[1] 1 5
[1] 3 6
[1] 2 6
[1] 1 6
[1] 3 7
[1] 2 7
[1] 1 7
[1] 3 8
[1] 2 8
[1] 1 8
[1] 3 9
[1] 2 9
[1] 1 9
[1]  3 10
[1]  2 10
[1]  3 11
[1]  1 10
[1]  2 11
[1]  3 12
[1]  1 11
[1]  2 12
[1]  3 13
[1]  1 12
[1]  2 13
[1]  3 14
[1]  1 13
[1]  2 14
[1]  3 15
[1]  1 14
[1]  2 15
[1]  3 16
[1]  2 16
[1]  1 15
[1]  3 17
[1]  2 17
[1]  3 18
[1]  1 16
[1]  2 18
[1]  3 19
[1]  1 17
[1]  2 19
[1]  3 20
[1]  1 18
[1]  2 20
[1]  3 21
[1]  1 19
[1]  3 22
[1]  2 21
[1]  1 20
[1]  3 23
[1]  2 22
[1]  1 21
[1]  3 24
[1]  2 23
[1]  1 22
[1]  3 25
[1]  2 24
[1]  3 26
[1]  1 23
[1]  2 25
[1]  3 27
[1]  1 24
[1]  2 26
[1]  3 28
[1]  2 27
[1]  1 25
[1]  3 29
[1]  2 28
[1]  1 26
[1]  3 30
[1]  2 29
[1]  1 27
[1]  3 31
[1]  2 30
[1]  1 28
[1]  3 32
[1]  2 31
[1]  1 29
[1]  3 33
[1]  2 32
[1]  1 30
[1]  3 34
[1]  2 33
[1]  1 31
[1]  3 35
[1]  2 34
[1]  3 36
[1]  1 32
[1]  2 35
[1]  3 37
[1]  1 33
[1]  2 36
[1]  3 38
[1]  1 34
[1]  2 37
[1]  3 39
[1]  1 35
[1]  2 38
[1]  3 40
[1]  1 36
[1]  2 39
[1]  3 41
[1]  1 37
[1]  3 42
[1]  2 40
[1]  1 38
[1]  3 43
[1]  2 41
[1]  3 44
[1]  1 39
[1]  2 42
[1]  3 45
[1]  1 40
[1]  2 43
[1]  3 46
[1]  1 41
[1]  2 44
[1]  3 47
[1]  1 42
[1]  2 45
[1]  3 48
[1]  1 43
[1]  2 46
[1]  3 49
[1]  1 44
[1]  2 47
[1]  3 50
[1]  1 45
[1]  2 48
[1]  3 51
[1]  1 46
[1]  2 49
[1]  3 52
[1]  1 47
[1]  2 50
[1]  3 53
[1]  1 48
[1]  2 51
[1]  3 54
[1]  2 52
[1]  3 55
[1]  1 49
[1]  3 56
[1]  2 53
[1]  1 50
[1]  3 57
[1]  2 54
[1]  1 51
[1]  3 58
[1]  2 55
[1]  1 52
[1]  3 59
[1]  2 56
[1]  1 53
[1]  3 60
[1]  2 57
[1]  1 54
[1]  3 61
[1]  2 58
[1]  3 62
[1]  1 55
[1]  2 59
[1]  3 63
[1]  1 56
[1]  2 60
[1]  3 64
[1]  1 57
[1]  2 61
[1]  3 65
[1]  1 58
[1]  3 66
[1]  2 62
[1]  1 59
[1]  3 67
[1]  2 63
[1]  1 60
[1]  3 68
[1]  2 64
[1]  1 61
[1]  3 69
[1]  2 65
[1]  1 62
[1]  3 70
[1]  2 66
[1]  3 71
[1]  1 63
[1]  2 67
[1]  3 72
[1]  1 64
[1]  2 68
[1]  3 73
[1]  1 65
[1]  2 69
[1]  3 74
[1]  1 66
[1]  2 70
[1]  3 75
[1]  1 67
[1]  2 71
[1]  3 76
[1]  1 68
[1]  2 72
[1]  3 77
[1]  1 69
[1]  2 73
[1]  3 78
[1]  3 79
[1]  2 74
[1]  1 70
[1]  3 80
[1]  2 75
[1]  1 71
[1]  3 81
[1]  2 76
[1]  1 72
[1]  3 82
[1]  2 77
[1]  1 73
[1]  3 83
[1]  2 78
[1]  1 74
[1]  3 84
[1]  2 79
[1]  1 75
[1]  3 85
[1]  2 80
[1]  1 76
[1]  3 86
[1]  2 81
[1]  3 87
[1]  1 77
[1]  2 82
[1]  3 88
[1]  1 78
[1]  2 83
[1]  3 89
[1]  1 79
[1]  2 84
[1]  3 90
[1]  2 85
[1]  1 80
[1]  3 91
[1]  2 86
[1]  1 81
[1]  3 92
[1]  2 87
[1]  1 82
[1]  3 93
[1]  2 88
[1]  1 83
[1]  3 94
[1]  2 89
[1]  1 84
[1]  3 95
[1]  2 90
[1]  3 96
[1]  1 85
[1]  2 91
[1]  3 97
[1]  1 86
[1]  2 92
[1]  3 98
[1]  1 87
[1]  2 93
[1]  3 99
[1]  1 88
[1]  2 94
[1]   3 100
[1]  1 89
[1]  2 95
[1]  1 90
[1]  2 96
[1]  1 91
[1]  2 97
[1]  2 98
[1]  1 92
[1]  2 99
[1]  1 93
[1]   2 100
[1]  1 94
[1]  1 95
[1]  1 96
[1]  1 97
[1]  1 98
[1]  1 99
[1]   1 100
> 
> 
> pdf(paste("As_MALA.pdf"), height = 6, width = 18)
> par(mfrow = c(1,3))
> for(i in 1:length(h)){
+   plot(l2, 1 - lb_list[[i]], type = "l", ylim = c(0, 1),
+        ylab = "(1 - A*)", xlab = TeX(r'($X_2$)'), main = paste("h = ",h[i]))
+ }
> dev.off()
null device 
          1 
> 
> pdf(paste("Hist_al2.pdf"), height = 6, width = 8)
> par(mfrow = c(1,3))
> for(i in 1:length(h)){
+   hist(lb_list[[i]], xlim = c(0, 1), main = paste("h = ",h[i]), xlab = "A*")
+ }
> dev.off()
null device 
          1 
> 
> proc.time()
    user   system  elapsed 
2075.770   43.817  756.992 
